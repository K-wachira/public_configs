{
    "window.titleBarStyle": "native",
    
    "workbench.colorCustomizations": {
      "activityBar.foreground": "#DEC184",
      "activityBar.background": "#3B414D",
      "sideBar.background": "#2F343E",
      "editor.background": "#282C33"
    },
  
    "editor.cursorStyle": "line",
    "editor.cursorBlinking": "blink",
    // "editor.cursorSmoothCaretAnimation": "on", slows down vim navigation
    "editor.cursorWidth": 3,
    "editor.fontSize": 15,
    "editor.fontFamily": "Zed Mono",
    "editor.codeLensFontFamily": "Zed Mono",
    "editor.fontLigatures": "'ss01', 'cv03', 'zero'",
    "debug.console.fontFamily": "Zed Mono",
    "debug.console.fontSize": 15,
    "debug.console.lineHeight": 35,
    "debug.toolBarLocation": "docked",
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.renderSideBySide": false,
    "terminal.integrated.fontFamily": "Zed Mono",
    "terminal.integrated.tabs.enabled": false,
    "terminal.integrated.lineHeight": 1.2,
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.env.osx": {
      "FIG_NEW_SESSION": "1"
    },
    "extensions.experimental.affinity": {
      "asvetliakov.vscode-neovim": 1
    },
    "workbench.iconTheme": "vscode-icons",
    "workbench.productIconTheme": "fluent-icons",
    "editor.minimap.enabled": false,
    "explorer.compactFolders": false,
    "explorer.decorations.badges": false,
    "explorer.openEditors.visible": 1,
    "update.mode": "start",
    "editor.scrollbar.verticalScrollbarSize": 5,
    "editor.scrollbar.horizontalScrollbarSize": 5,
    "window.commandCenter": false,
    "workbench.layoutControl.enabled": false,
    "workbench.colorTheme": "Atom One Dark",
  
    "files.autoSave": "afterDelay",
    "liveServer.settings.donotShowInfoMsg": true,
  
    "editor.lineNumbers": "relative",
  
    "vim.leader": "<Space>",
    "vim.hlsearch": true,
    "vim.normalModeKeyBindingsNonRecursive": [
      // NAVIGATION
      // switch b/w buffers
      { "before": ["<S-h>"], "commands": [":bprevious"] },
      { "before": ["<S-l>"], "commands": [":bnext"] },
  
      // splits
      { "before": ["leader", "v"], "commands": [":vsplit"] },
      { "before": ["leader", "s"], "commands": [":split"] },
  
      // panes
      {
        "before": ["leader", "h"],
        "commands": ["workbench.action.focusLeftGroup"]
      },
      {
        "before": ["leader", "j"],
        "commands": ["workbench.action.focusBelowGroup"]
      },
      {
        "before": ["leader", "k"],
        "commands": ["workbench.action.focusAboveGroup"]
      },
      {
        "before": ["leader", "l"],
        "commands": ["workbench.action.focusRightGroup"]
      },
      // NICE TO HAVE
      { "before": ["j", "k"], "commands": [":w"] },
      { "before": ["leader", "q"], "commands": [":q!"] },
      { "before": ["leader", "x"], "commands": [":x!"] },
   
      { "before": ["leader", "f"], "commands": ["workbench.action.quickOpen"] },
      { "before": ["leader", "p"], "commands": ["editor.action.formatDocument"] },
      { "before": ["leader", "n"], "commands": ["workbench.files.action.focusFilesExplorer"]},
  
      {
        "before": ["g", "h"],
        "commands": ["editor.action.showDefinitionPreviewHover"]
      }
    ],
    "vim.visualModeKeyBindings": [
      // Stay in visual mode while indenting
      { "before": ["<"], "commands": ["editor.action.outdentLines"] },
      { "before": [">"], "commands": ["editor.action.indentLines"] },
      // Move selected lines while staying in visual mode
      { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
      { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
      // toggle comment selection
      { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
    ],
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.startupEditor": "none",
    "liveServer.settings.donotVerifyTags": true,
    "scm.experimental.showHistoryGraph": true,
    "gitblame.inlineMessageEnabled": true,
    "gitblame.inlineMessageFormat": "${author.name}: ${commit.summary,64} (${time.ago})"
  }
  